---
# tasks file for post_install
- name: yum install chrony
  ansible.builtin.yum:
    name: chrony
    state: present
  when: ansible_distribution == "CentOS"

- name: enable chronyd service
  ansible.builtin.service:
    state: started
    enabled: true
    name: chronyd
  when: ansible_distribution == "CentOS"

- name: apt install ntp on ubuntu vms
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  when: ansible_distribution == "Ubuntu"
  loop:
    - ntp
    - python3-apt

- name: enable ntp service on ubuntu vms
  ansible.builtin.service:
    state: started
    enabled: true
    name: ntp
  when: ansible_distribution == "Ubuntu"

- name: add users to the ubuntu vms
  ansible.builtin.user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    #group: developers
    create_home: yes
  when: ansible_distribution == "Ubuntu"
  loop:
    - { name: "amos", comment: "amos_comment"}
    - { name: "shira", comment: "shira_comment"}
    - { name: "tamar", comment: "tamar_comment"}
    - { name: "goni", comment: "goni_comment"}

- name: adding /etc/motd
  copy:
    content: 'this server is managed by ansible, no manual changes plase:)'
    dest: /etc/motd

- name: Template a file to /etc/chrony.conf
  ansible.builtin.template:
    src: templates/ntp_conf_centos
    dest: /etc/chrony.conf
    backup: yes
  when: ansible_distribution == "CentOS"
  notify:
    - restart service on centos

- name: Template a file to /etc/ntp.conf
  ansible.builtin.template:
    src: templates/ntp_conf_ubuntu
    dest: /etc/ntp.conf
    backup: yes
  when: ansible_distribution == "Ubuntu"
  notify:
    - restart service on ubuntu



- name: copy myfile.txt
  copy:
    src: files/myfile.txt
    dest: /opt/myfile.txt


- name: Create dir22 directory if it does not exist
  ansible.builtin.file:
    path: "{{dir22path}}"
    state: directory


